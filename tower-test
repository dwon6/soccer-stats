#!groovy

// FULL_BUILD -> true/false build parameter to define if we need to run the entire stack for lab purpose only
final FULL_BUILD = params.FULL_BUILD
// HOST_PROVISION -> server to run ansible based on provision/inventory.ini
final HOST_PROVISION = params.HOST_PROVISION

final GIT_URL = 'https://github.com/dwon6/soccer-stats.git'
final NEXUS_URL = 'nexus.local:8081'

stage('Build') {
    node {
        git GIT_URL
        withEnv(["PATH+MAVEN=${tool 'm3'}/bin"]) {
                def pom = readMavenPom file: 'pom.xml'
                sh "mvn -B versions:set -DnewVersion=${pom.version}-${BUILD_NUMBER}"
                sh "mvn -B -Dmaven.test.skip=true clean package"
                stash name: "artifact", includes: "target/soccer-stats-*.war"
        }
    }
}

stage('Deploy') {
    node {
        def pom = readMavenPom file: "pom.xml"
        def repoPath =  "${pom.groupId}".replace(".", "/") + 
                        "/${pom.artifactId}"

        def version = pom.version

//        if(!FULL_BUILD) { //takes the last version from repo
//            sh "curl -o metadata.xml -s http://${NEXUS_URL}/repository/${NEXUS_REPO}/${repoPath}/maven-metadata.xml"
//            version = sh script: 'xmllint metadata.xml --xpath "string(//latest)"',
//                         returnStdout: true
        }
        def artifactUrl = "http://${NEXUS_URL}/repository/maven-releases/${repoPath}/${version}/${pom.artifactId}-${version}.war"
        def hostLimit = (HOST_PROVISION == "all" || HOST_PROVISION == null) ? "" : HOST_PROVISION
        
        //you must specify your own ids
        ansibleTower(
                towerServer: 'tower',
                templateType: 'job',
                jobTemplate: 'Soccer-Stat',
                importTowerLogs: true,
                inventory: 'soccer-stat',
                removeColor: false,
                verbose: true,
                credential: 'jenkins',  
 //               limit: "${hostLimit}",
                extraVars: """---
ARTIFACT_URL:  "${artifactUrl}"
APP_NAME: "${pom.artifactId}" 
"""
        )
    }
